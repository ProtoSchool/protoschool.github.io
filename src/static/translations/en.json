{
  "feedbackSurvey": {
    "form": {
      "title": "Share your feedback on this tutorial!",
      "questions": [{
        "text": "How clearly do you understand the concepts presented in this tutorial?",
        "trackingId": "1. Understanding of the concepts"
      }, {
        "text": "How excited are you to continue learning about the Decentralized Web?",
        "trackingId": "2. Excitement to continue learning"
      }, {
        "text": "After reviewing the resources below, do you know where to go next in your learning journey?",
        "trackingId": "3. Where to go next",
        "answers": {
          "lowest": "Not really",
          "highest": "Definitely"
        }
      }],
      "defaultAnswers": {
        "lowest": "Not at all",
        "highest": "Very"
      }
    },
    "thankYouMessage": {
      "title": "Thank you!",
      "textWithPrompt": "<h3 class='b mt2 mb1'>Have 3 more minutes to help us out? Tell us about yourself!</h3><p style='margin-top: 0;'>We'd love to learn more about you so we can create content and features that meet your needs. Take this anonymous survey to share your experience with ProtoSchool, DWeb, and coding.</p>",
      "textWithoutPrompt": "We appreciate your feedback on this tutorial!",
      "surveyLink": "https://forms.gle/yPXid3EpNQkrpDqM7"
    }
  },
  "courses": {
    "ipfs": {
      "description": "The [InterPlanetary File System (IPFS)](https://ipfs.tech) is a peer-to-peer network protocol for storing and sharing data in a distributed file system, with addresses based on content, not location. In this course, we'll dive into the basics of cryptographic hashing and content addressing on the decentralized web, take a look at how Content Identifiers (CIDs) are constructed in IPFS, and get hands on with the js-ipfs API. Through JavaScript coding challenges, we'll learn to store and share files with peers, create links between Merkle DAGs, and explore the Mutable File System (MFS), which lets you work with content-addressed files and directories as if you were using a traditional named-based file system. As we go, we'll learn more about other protocol layers of the Web3 stack that work in parallel with IPFS, including Multiformats, IPLD, libp2p, and Filecoin.",
      "seoDescription": "Interactive tutorials on IPFS, the peer-to-peer network protocol for storing and sharing data in a distributed file system, with addresses based on content, not location."
    },
    "multiformats": {
      "description": "[Multiformats](https://multiformats.io) is a collection of protocols that encode self-describing values for content-addressed data on the distributed web. The course begins with a tutorial introducing content addressing and cryptographic hashing, key building blocks of the decentralized web. In our next tutorial, we'll take a deep dive into the properties of CIDs (Content Identifiers), the unique labels used to point to data stored on distributed information systems including IPFS, Filecoin, libp2p, and IPLD. Along the way, we'll find lessons on the cryptographic hashing algorithms described by multihash, encoding systems described by multicodec, CID versions described by version prefixes, and base encoding methods described by multibase. We'll even explore the [CID Inspector](https://cid.ipfs.tech/), a tool for breaking down CIDs into human-readable properties.",
      "seoDescription": "Interactive tutorials on Multiformats, a collection of protocols that encode self-describing values for content-addressed data in distributed web projects like IPFS, Filecoin, libp2p, and IPLD."
    },
    "filecoin": {
      "description": "[Filecoin](https://filecoin.io) is a distributed storage network powered by cryptocurrency and backed by cryptographic proofs. The keystone of this course is a tutorial exploring how Filecoin's built-in verification methods make it possbile to trust peers in an incentivized, decentralized file storage system. Lessons focus on the unique cryptographic proofs that set Filecoin apart from other blockchains: Proof of Replication (PoRep), in which storage miners prove that they're physically storing a unique copy of the client's data, and Proof of Spacetime (PoSt), which proves that they're continuing to dedicate storage space to that same data over time. In other tutorials, we'll learn the basics of content addressing and cryptographic hashing, key building blocks of the decentralized web, and take a deep dive into the properties of CIDs (Content Identifiers), the unique labels used to point to data stored on distributed information systems including IPFS, Filecoin, libp2p, and IPLD.",
      "seoDescription": "Interactive tutorials on Filecoin, the decentralized storage network powered by cryptocurrency and backed by blockchain technology and cryptographic proofs."
    },
    "ipld": {
      "description": "[IPLD](https://ipld.io) (InterPlanetary Linked Data) is an ecosystem of standardized formats and data structures that are universally addressable and linkable, enabling fully decentralized applications. In this course, we'll dive into the basics of cryptographic hashing and content addressing on the decentralized web, explore the properties and versatility of the Merkle DAG, take a look at how Content Identifiers (CIDs) are constructed in IPFS, and get hands on with the IPFS DAG API. Through JavaScript coding challenges, we'll learn to store and share files with peers and create links between Merkle DAGs to express complex data structures. As we go, we'll learn more about other protocol layers of the Web3 stack that support or rely on IPLD, including IPFS, libp2p, Filecoin, and Multiformats.",
      "seoDescription": "Interactive tutorials on IPLD, an ecosystem of standardized formats and data structures that are universally addressable and linkable, enabling fully decentralized applications."
    }
  },
  "modals": {
    "tutorialRedirect": {
      "title": "Are you in the right place?",
      "body": {
        "start": {
          "_1": "You seem to have landed in the middle of our ",
          "_2": " tutorial. Because each lesson in a ProtoSchool tutorial builds on the previous one, we recommend starting each tutorial from its first lesson. Would you like to start this tutorial from the beginning or view the requested lesson, ",
          "_3": ", out of context?"
      },
      "resume": {
        "_1": "You seem to have landed on a lesson in our ",
        "_2": " tutorial that you haven't yet reached in your previous visits. Because each lesson in a ProtoSchool tutorial builds on the previous one, we recommend progressing through them in order. Would you like to resume the tutorial where you left off or view the requested lesson, ",
        "_3": ", out of context?"
        }
      },
      "actions": {
        "start": "Start tutorial",
        "resume": "Resume tutorial",
        "stay": "View lesson"
      }
    }
  },
  "footer": {
    "columns": [
      {
        "type": "courses",
        "title": "Courses",
        "links": ["ipfs", "ipld", "filecoin", "multiformats"]
      },
      {
        "type": "community",
        "title": "Community",
        "links": [
          {
            "text": "GitHub",
            "url": "https://github.com/protoschool"
          },
          {
            "text": "Twitter",
            "url": "https://twitter.com/protoschool"
          },
          {
            "text": "Newsletter",
            "url": "/news"
          },
          {
            "text": "Contribute",
            "url": "/contribute"
          },
          {
            "text": "Contact",
            "url": "/contribute#contact"
          }
        ]
      },
      {
        "type": "projects",
        "title": "Related Projects",
        "links": [ "ipfs", "filecoin", "ipld", "libp2p", "multiformats" ]
      }
    ],
    "copyright": {
      "_1": "Except as",
      "_2": "noted",
      "_3":", content licensed",
      "_4": ".",
      "licenseURL": "https://creativecommons.org/licenses/by/3.0/deed.en"
    }
  }
}
